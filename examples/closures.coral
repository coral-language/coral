// Closures and higher-order functions
fn makeAdder(x: Int) do
  return |y| x + y
end

add5 = makeAdder(5)
result = add5(10)
println("5 + 10 = {result}")

add10 = makeAdder(10)
result2 = add10(20)
println("10 + 20 = {result2}")

// Using map with lambda
numbers = [1, 2, 3, 4, 5]
squares = numbers.map(|x| x * x)
println("\nSquares: {squares}")

cubes = numbers.map(|x| x * x * x)
println("Cubes: {cubes}")